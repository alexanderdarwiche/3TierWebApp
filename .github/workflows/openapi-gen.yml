name: openapi-gen

on:
  workflow_run:
    workflows: ["ci-cd"]
    types:
      - completed
  workflow_dispatch:  # To manually test the workflow in GitHub CLI

jobs:
  generate-openapi:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Generate OpenAPI definition
      - name: Generate OpenAPI Definition
        run: |
          curl https://production-backend-container.whitehill-62ea132a.swedencentral.azurecontainerapps.io/apispec_1.json -o backend/openapi.json

      # Prettify the OpenAPI JSON
      - name: Prettify OpenAPI JSON
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          jq . backend/openapi.json > backend/openapi_pretty.json
          mv backend/openapi_pretty.json backend/openapi.json

      # Check for changes in the OpenAPI definition
      - name: Check for Changes
        id: check_changes
        run: |
          # Check for differences in the OpenAPI JSON file, ignoring whitespace
          git diff --exit-code --ignore-all-space backend/openapi.json
          
          # Capture exit code
          exit_code=$?

          # If exit code is 0 (no changes), exit the workflow early
          if [ $exit_code -eq 0 ]; then
            echo "No changes detected. Exiting."
            exit 0
          else
            echo "Changes detected. Continuing the workflow."
          fi

      # Commit and push the updated OpenAPI definition if there are changes
      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Set up the Git remote URL to use the GITHUB_TOKEN for authentication
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/alexanderdarwiche/3TierWebApp.git

          git add backend/openapi.json
          git commit -m "Update OpenAPI definition"
          git push origin HEAD:main  # Specify the branch you want to push to
