{
  "openapi": "3.0.1",
  "info": {
    "title": "Younium API (production-westeurope)",
    "version": "2.1"
  },
  "servers": [
    {
      "url": "https://api.younium.com"
    }
  ],
  "paths": {
    "/Accounts/{id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Account by id.",
        "description": "Requires permission *Account View*.",
        "operationId": "get-accounts-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Edit Account",
        "description": "",
        "operationId": "patch-accounts-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountPatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Accounts.",
        "description": "Requires permission *Account View*.",
        "operationId": "get-accounts",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'customFields' and 'addresses'",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create Account",
        "operationId": "post-accounts",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateAccountRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Accounts/OnlinePaymentDetails/{id}": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create OnlinePaymentDetails for Account",
        "description": "",
        "operationId": "post-accounts-onlinepaymentdetails-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OnlinePaymentDetailsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          },
          "201": {
            "description": "The OnlineDetailsPayment for the request."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Edit OnlinePaymentDetails on Account",
        "description": "",
        "operationId": "patch-accounts-onlinepaymentdetails-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OnlinePaymentDetailsRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Delete OnlinePaymentDetails on Account",
        "description": "",
        "operationId": "delete-accounts-onlinepaymentdetails-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Accounts/{accountId}": {
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Delete Account",
        "description": "",
        "operationId": "delete-accounts-accountid",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The identifier of the account",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Accounts/{id}/Subscriptions": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Account subscriptions.",
        "operationId": "get-accounts-id-subscriptions",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'orderProducts', 'orderCharges', 'chargeDetails', 'orderDiscounts', 'milestones' and 'customFields' on these entities",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Accounts/{id}/Invoices": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Account invoices.",
        "operationId": "get-accounts-id-invoices",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'invoiceLines' and 'customFields' on these entities",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "mappedResponseFlag",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Accounts/{id}/SalesOrders": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Account SalesOrders.",
        "operationId": "get-accounts-id-salesorders",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'orderProducts', 'orderCharges', 'chargeDetails', 'orderDiscounts', 'milestones' and 'customFields' on these entities",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Bookings": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "Get Bookings",
        "operationId": "get-bookings",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'bookingLines'",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Bookings/{id}": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "Get Bookings by Id",
        "operationId": "get-bookings-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/ChartOfAccounts/{id}": {
      "get": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Get Financial Account by id",
        "operationId": "get-chartofaccounts-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/ChartOfAccounts": {
      "get": {
        "tags": [
          "ChartOfAccounts"
        ],
        "summary": "Get ChartOfAccounts",
        "operationId": "get-chartofaccounts",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Get Countries",
        "operationId": "get-countries",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Countries/{id}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Get Countries by Id",
        "operationId": "get-countries-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Currency": {
      "post": {
        "tags": [
          "Currencies"
        ],
        "summary": "Create Currency",
        "operationId": "post-currency",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateCurrencyRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Get Currency",
        "operationId": "get-currency",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Currency/{id}": {
      "delete": {
        "tags": [
          "Currencies"
        ],
        "summary": "Delete Currency.",
        "operationId": "delete-currency-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Get Currency by Id",
        "operationId": "get-currency-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/CustomFieldConfigurations": {
      "get": {
        "tags": [
          "CustomFieldsController"
        ],
        "summary": "Get CustomFieldConfigurations",
        "operationId": "get-customfieldconfigurations",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldConfigurationResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "CustomFieldsController"
        ],
        "summary": "Create CustomFieldConfiguration",
        "operationId": "post-customfieldconfigurations",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateCustomFieldConfigurationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          },
          "201": {
            "description": "The CustumFieldConfiguration for the request."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/CustomFieldConfigurations/{id}": {
      "get": {
        "tags": [
          "CustomFieldsController"
        ],
        "summary": "Get CustomFieldConfiguration by Id",
        "operationId": "get-customfieldconfigurations-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldConfigurationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "CustomFieldsController"
        ],
        "summary": "Update CustomFieldConfiguration by Id",
        "operationId": "patch-customfieldconfigurations-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCustomFieldConfigurationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/CustomFieldConfigurations/{entity}/{key}": {
      "get": {
        "tags": [
          "CustomFieldsController"
        ],
        "summary": "Get CustomFieldConfiguration by Entity and Key",
        "operationId": "get-customfieldconfigurations-entity-key",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldConfigurationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "CustomFieldsController"
        ],
        "summary": "Update CustomFieldConfiguration by Entity and key.",
        "operationId": "patch-customfieldconfigurations-entity-key",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCustomFieldConfigurationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/DocumentTemplate/{id}": {
      "get": {
        "tags": [
          "DocumentTemplates"
        ],
        "summary": "Get DocumentTemplate by id",
        "operationId": "get-documenttemplate-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/DocumentTemplate": {
      "get": {
        "tags": [
          "DocumentTemplates"
        ],
        "summary": "Get DocumentTemplate",
        "operationId": "get-documenttemplate",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplateResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/ExchangeRate": {
      "post": {
        "tags": [
          "ExchangeRates"
        ],
        "summary": "Create ExchangeRate",
        "operationId": "post-exchangerate",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateExchangeRateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "ExchangeRates"
        ],
        "summary": "Get ExchangeRate",
        "operationId": "get-exchangerate",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeRateResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/ExchangeRate/{id}": {
      "get": {
        "tags": [
          "ExchangeRates"
        ],
        "summary": "Get ExchangeRate by Id",
        "operationId": "get-exchangerate-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeRateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/InvoiceBatches/{batchIdentifier}/BatchLog": {
      "get": {
        "tags": [
          "InvoiceBatches"
        ],
        "summary": "Get Invoice Batch Log by Id or Reference",
        "operationId": "get-invoicebatches-batchidentifier-batchlog",
        "parameters": [
          {
            "name": "batchIdentifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceBatchLogResponsePagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/InvoiceBatches/BatchJobStatus/{batchReference}/Generated": {
      "get": {
        "tags": [
          "InvoiceBatches"
        ],
        "summary": "Get status on generate invoice batch job.",
        "operationId": "get-invoicebatches-batchjobstatus-batchreference-generated",
        "parameters": [
          {
            "name": "batchReference",
            "in": "path",
            "description": "Accepted references job id, batch id, batch number or event id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedBatchJobStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/InvoiceBatches/BatchJobStatus/{batchReference}/Posted": {
      "get": {
        "tags": [
          "InvoiceBatches"
        ],
        "summary": "Get status on posted invoice batch job.",
        "operationId": "get-invoicebatches-batchjobstatus-batchreference-posted",
        "parameters": [
          {
            "name": "batchReference",
            "in": "path",
            "description": "Accepted references job id, batch id, batch number or event id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedBatchJobStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/InvoiceBatches": {
      "post": {
        "tags": [
          "InvoiceBatches"
        ],
        "summary": "Generate Invoice Batch",
        "description": "Generate invoice batch by running generate invoice batch job. Status on jobs can obtained by batch jobs status endpoints or found in settings > scheduled jobs in the UI.",
        "operationId": "post-invoicebatches",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GenerateInvoiceBatchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceBatchJobResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "InvoiceBatches"
        ],
        "summary": "Get InvoiceBatches",
        "operationId": "get-invoicebatches",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceBatchResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/InvoiceBatches/{id}/Post": {
      "post": {
        "tags": [
          "InvoiceBatches"
        ],
        "summary": "Post Invoice Batch",
        "description": "Post invoice batch by running post invoice batch job. Status on jobs can obtained by batch jobs status endpoints or found in settings > scheduled jobs in the UI",
        "operationId": "post-invoicebatches-id-post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/JobRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceBatchJobResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/InvoiceBatches/{id}": {
      "get": {
        "tags": [
          "InvoiceBatches"
        ],
        "summary": "Get InvoiceBatches by Id",
        "operationId": "get-invoicebatches-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceBatchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/InvoiceBatchGroups": {
      "get": {
        "tags": [
          "InvoiceBatchGroups"
        ],
        "summary": "Get InvoiceBatchGroups",
        "operationId": "get-invoicebatchgroups",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceBatchGroupResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/InvoiceBatchGroups/{id}": {
      "get": {
        "tags": [
          "InvoiceBatchGroups"
        ],
        "summary": "Get InvoiceBatchGroups by Id",
        "operationId": "get-invoicebatchgroups-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceBatchGroupResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Invoices",
        "operationId": "get-invoices",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'invoiceLines' and 'customFields' on these entities",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/{id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get an Invoice by id",
        "description": "Requires permission *Invoice Read*.",
        "operationId": "get-invoices-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Invoices"
        ],
        "summary": "Edit Invoice",
        "description": "",
        "operationId": "patch-invoices-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/invoiceDownloadAttachment/{invoiceId}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Posted Invoice PDF Attachment",
        "description": "Get the invoice attachment generated based on the document template when the invoice where posted.\\\r\nFile in pdf format.\\\r\nRequires permission *Invoice View*.",
        "operationId": "get-invoices-invoicedownloadattachment-invoiceid",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/generateAttachmentURL/{invoiceId}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Posted Invoice PDF Attachment URL",
        "description": "Get a generated URL to posted invoice pdf attachment of specified Invoice.\r\nThe generated URL is valid for up to 24 hours.",
        "operationId": "get-invoices-generateattachmenturl-invoiceid",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ExpirationTimeSpanHours",
            "in": "query",
            "description": "parameter to set expiration time span in hours for shared access signature of the URL (SAS). Value must be convertible to an integer and cannot be negative. value 'max' is allowed for the longest possible expiration time. Default value is 24 hours.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/{id}/Attachments": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Invoice Attachments",
        "description": "Get a list of invoice attachments with urls by invoice Id.\r\nThe generated URLs are valid for up to 24 hours.\r\nRequires permission *Invoice View*.",
        "operationId": "get-invoices-id-attachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ExpirationTimeSpanHours",
            "in": "query",
            "description": "parameter to set expiration time span in hours for shared access signature of the URL (SAS). Value must be convertible to an integer and cannot be negative. value 'max' is allowed for the longest possible expiration time. Default value is 24 hours.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceAttachmentResponsePagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/PostedInvoiceDocumentAttachments": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Posted Invoice Document attachments",
        "description": "Get a list of invoice attachments with urls by invoice Id.\r\nThe generated URLs are valid for up to 24 hours.\r\nRequires permission *Invoice View*.",
        "operationId": "get-invoices-postedinvoicedocumentattachments",
        "parameters": [
          {
            "name": "ExpirationTimeSpanHours",
            "in": "query",
            "description": "parameter to set expiration time span in hours for shared access signature of the URL (SAS). Value must be convertible to an integer and cannot be negative. value 'max' is allowed for the longest possible expiration time. Default value is 24 hours.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceAttachmentResponsePagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/DownloadAttachment/{id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Invoice Attachment File by Attachment Id",
        "description": "get attachment file by attachment Id.\r\nRequires permission *Invoice View*.",
        "operationId": "get-invoices-downloadattachment-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attachment id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/paid": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Marks Invoice as paid",
        "description": "Marks a posted Invoice as \"paid in other system\".",
        "operationId": "post-invoices-paid",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InvoicePaidRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/onAccountInvoice": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Generate invoice on Account.",
        "operationId": "post-invoices-onaccountinvoice",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateOnAccountInvoiceRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedInvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/{id}/cancel": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Cancel Invoice",
        "operationId": "post-invoices-id-cancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/{id}/credit": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Generate Credit Invoice",
        "operationId": "post-invoices-id-credit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditInvoiceRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedInvoiceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/{id}/post": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Post Invoice",
        "operationId": "post-invoices-id-post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/orders/{id}": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Generate Invoice from Order",
        "operationId": "post-invoices-orders-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GenerateInvoiceRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedInvoiceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/{id}/ProcessStripePayment": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Process Stripe Payment for Invoice.",
        "description": "Invoices with online payment status 'Succeeded' and 'Processing' will not be reprocessed",
        "operationId": "post-invoices-id-processstripepayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessedOnlinePaymentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Invoices/{id}/OnlinePaymentLogs": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Invoices Online Payment Logs",
        "operationId": "get-invoices-id-onlinepaymentlogs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlinePaymentLogResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Journals/{id}": {
      "patch": {
        "tags": [
          "Journals"
        ],
        "summary": "Patch Journals",
        "operationId": "patch-journals-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchJournalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Get Journals by Id",
        "operationId": "get-journals-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Journals/AccountingTransactions/{year}": {
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Get Accounting Transactions by Fiscal Year",
        "description": "Get Accounting transactions by fiscal year.",
        "operationId": "get-journals-accountingtransactions-year",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is applied on sub entities: transactions and transaction custom fields",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingTransactionResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Journals/AccountingTransactions/{year}/FiscalPeriod/{period}": {
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Get Accounting Transactions by Fiscal Period",
        "description": "Get Accounting transactions by fiscal year and period.",
        "operationId": "get-journals-accountingtransactions-year-fiscalperiod-period",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "period",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is applied on sub entities: transactions and transaction custom fields",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingTransactionResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Journals/AccountingTransactions/{year}/FiscalQuarter/{quarter}": {
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Get Accounting Transactions by Fiscal Quarter",
        "description": "Get Accounting transactions by fiscal year and quarter.",
        "operationId": "get-journals-accountingtransactions-year-fiscalquarter-quarter",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quarter",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is applied on sub entities: transactions and transaction custom fields",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingTransactionResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Journals/AccountingTransactions/{year}/FinancialAccounts/{financialAccount}": {
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Get Accounting Transactions by fiscal year and Financial Accounts",
        "operationId": "get-journals-accountingtransactions-year-financialaccounts-financialaccount",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "financialAccount",
            "in": "path",
            "description": "Code or Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is applied on sub entities: transactions and transaction custom fields",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingTransactionResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Journals/{id}/AccountingTransactions": {
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Get Accounting Transactions by Journal Id",
        "operationId": "get-journals-id-accountingtransactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is applied on sub entities: transactions and transaction custom fields",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingTransactionResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Journals": {
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Get Journals",
        "operationId": "get-journals",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'vouchers' (accounting transactions), 'transactions' and 'customFields' on transactions",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Measurements": {
      "post": {
        "tags": [
          "Measurements"
        ],
        "summary": "Create Measurement",
        "operationId": "post-measurements",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateMeasurementRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Measurements"
        ],
        "summary": "Get Measurements",
        "operationId": "get-measurements",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Measurements/import": {
      "post": {
        "tags": [
          "Measurements"
        ],
        "summary": "Import Measurements",
        "description": "Import measurement Data in csv or json format.",
        "operationId": "post-measurements-import",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ImportMeasurementRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDataResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Measurements/{id}": {
      "get": {
        "tags": [
          "Measurements"
        ],
        "summary": "Get Measurements by Id",
        "operationId": "get-measurements-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get any version of a SalesOrder or Subscription by id.",
        "description": "Can be used when an orderId can be both a SalesOrder and a Subscription and any version.\r\nResponse body will be either a SalesOrderResponse or a SubscriptionResponse.",
        "operationId": "get-orders-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Orders/Charges/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get Charge by Id",
        "description": "Get any version of a subscription or a sales order Charge.",
        "operationId": "get-orders-charges-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderProductChargeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Orders/{id}/charges": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get Charges by order id",
        "operationId": "get-orders-id-charges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderProductChargeResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Orders/Products/{id}/charges": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get Charges by order product id",
        "operationId": "get-orders-products-id-charges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderProductChargeResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Orders/Charges/{id}/InvoicedTo": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Edit InvoicedToDate on Charge",
        "description": "Set or edit invoiced to date on order product charge\r\nThe Invoiced To date cannot be before the charges effective start date or the current invoiced to date.\r\nIn the order product charge response the field for invoiced to date is referred to as 'chargedThroughDate'",
        "operationId": "post-orders-charges-id-invoicedto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInvoicedToDateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Payments": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Add Payment",
        "operationId": "post-payments",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreatePaymentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Get Payments",
        "operationId": "get-payments",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'paymentSettlements' and 'writeOffs'",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Payments/{id}": {
      "patch": {
        "tags": [
          "Payments"
        ],
        "summary": "Update Payment",
        "description": "Update Payment details and Add, remove or edit payment settlements and write offs.",
        "operationId": "patch-payments-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdatePaymentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Get Payments by Id",
        "operationId": "get-payments-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Payments/CreateAndPost": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create and Post Payment",
        "operationId": "post-payments-createandpost",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateAndPostPaymentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/PaymentTerms": {
      "post": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "Create PaymentTerm",
        "operationId": "post-paymentterms",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreatePaymentTermRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "Get PaymentTerms",
        "operationId": "get-paymentterms",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTermResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/PaymentTerms/{id}": {
      "get": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "Get PaymentTerms by Id",
        "operationId": "get-paymentterms-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTermResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Products/FromChargePlan/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Product from ChargePlan Id",
        "operationId": "get-products-fromchargeplan-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Products/FromCharge/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Product from Charge Id",
        "operationId": "get-products-fromcharge-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Products/productFeatures": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Product Features",
        "operationId": "get-products-productfeatures",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponsePagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Products": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create Product",
        "operationId": "post-products",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProductRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Products",
        "operationId": "get-products",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'chargePlans', 'charges', 'chargeDetails' and 'customFields' on these entities",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Products/{id}": {
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Update Product",
        "operationId": "patch-products-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProductRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product",
        "description": "A product can only be deleted if it's not in use on any active orders.",
        "operationId": "delete-products-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Products by Id",
        "operationId": "get-products-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Products/chargePlans/{id}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete charge plan",
        "description": "A charge plan can only be deleted if it's not in use on any active orders.",
        "operationId": "delete-products-chargeplans-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Products/charges/{id}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete charges",
        "description": "A charge can only be deleted if it's not in use on any active orders.",
        "operationId": "delete-products-charges-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Quotes/convertToOrder": {
      "post": {
        "tags": [
          "Quotes"
        ],
        "summary": "Convert Quote to new Order.",
        "description": "A Quote can only be identified using Id or a unique custom fields.\r\nBy default the Quote will be converted to a orderDraft but can be converted into an Active order if activateOrder is true.\r\nIf the Quote to be converted is for a new Account prospect, that Account will automatically be converted to a customer Account once the Quote is converted.\r\nAny attachments to the quote will follow to the converted order but notes will not.\r\nThis operation can be also used for Change Quotes - so after convert, change will be applied to linked Order.",
        "operationId": "post-quotes-converttoorder",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConvertQuoteToOrderRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteConvertedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Quotes": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "Get Quotes",
        "operationId": "get-quotes",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'products', 'charges', 'priceDetails' and 'customFields' on these entities",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Quotes/{id}": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "Get Quotes by Id",
        "operationId": "get-quotes-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Reports/{id}/Data": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get Report Data by Report Id.",
        "operationId": "get-reports-id-data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "parameter to sort data ascending or descending. Default is descending.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/direction"
                }
              ]
            }
          },
          {
            "name": "SortByField",
            "in": "query",
            "description": "Parameter of what field to sort by. the parameter string is case insensitive and should match the reports field name.",
            "schema": {
              "type": "string",
              "example": "accountNumber"
            },
            "example": "accountNumber"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringObjectDictionaryListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get Reports",
        "operationId": "get-reports",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Reports/{id}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get Reports by Id",
        "operationId": "get-reports-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/RevenueSchedule/Charge/{chargeNumber}": {
      "get": {
        "tags": [
          "RevenueSchedule"
        ],
        "summary": "Get revenue schedule by charge number",
        "operationId": "get-revenueschedule-charge-chargenumber",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueScheduleItemResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/RevenueSchedule/InvoiceLine/{id}": {
      "get": {
        "tags": [
          "RevenueSchedule"
        ],
        "summary": "Get revenue schedule by invoice line id",
        "operationId": "get-revenueschedule-invoiceline-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueScheduleItemResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/SalesOrders": {
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "Get Sales Orders",
        "operationId": "get-salesorders",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'orderProducts', 'orderCharges', 'chargeDetails', 'orderDiscounts', 'milestones' and 'customFields' on these entities",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "Create SalesOrder.",
        "operationId": "post-salesorders",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateSalesOrderRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The salesOrders for the request."
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/SalesOrders/{id}": {
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "Get SalesOrder by id",
        "operationId": "get-salesorders-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/SalesOrders/{id}/version": {
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "Get SalesOrder version by Id",
        "operationId": "get-salesorders-id-version",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/SalesOrders/{orderNumber}/versions": {
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "Get SalesOrder versions",
        "operationId": "get-salesorders-ordernumber-versions",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'orderProducts', 'orderCharges', 'chargeDetails', 'orderDiscounts', 'milestones' and 'customFields' on these entities",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrderResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/SalesOrders/{orderNumber}/versions/{version}": {
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "Get SalesOrder version",
        "operationId": "get-salesorders-ordernumber-versions-version",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrderResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/SalesOrders/activate/{id}": {
      "post": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "Activate SalesOrder",
        "operationId": "post-salesorders-activate-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/SimpleProducts": {
      "get": {
        "tags": [
          "SimpleProducts"
        ],
        "summary": "Get SimpleProducts",
        "operationId": "get-simpleproducts",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleProductListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/SimpleProducts/{id}": {
      "get": {
        "tags": [
          "SimpleProducts"
        ],
        "summary": "Get SimpleProducts by Id",
        "operationId": "get-simpleproducts-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleProduct"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/{id}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscription by Id",
        "description": "Requires permission *Order View*",
        "operationId": "get-subscriptions-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The subscription identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Patch Subscription",
        "operationId": "patch-subscriptions-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Delete Subscription",
        "operationId": "delete-subscriptions-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "subscription id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscriptions",
        "operationId": "get-subscriptions",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'orderProducts', 'orderCharges', 'chargeDetails', 'orderDiscounts', 'milestones' and 'customFields' on these entities",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create subscription",
        "operationId": "post-subscriptions",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateSubscriptionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscription created."
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/{orderNumber}/versions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscription versions",
        "operationId": "get-subscriptions-ordernumber-versions",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Filter is also applied on sub entities: 'orderProducts', 'orderCharges', 'chargeDetails', 'orderDiscounts', 'milestones' and 'customFields' on these entities",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/{id}/version": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscription Version by Id",
        "operationId": "get-subscriptions-id-version",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/{orderNumber}/versions/{version}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscription Version by OrderNumber",
        "operationId": "get-subscriptions-ordernumber-versions-version",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/{id}/change": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Change Subscription",
        "operationId": "post-subscriptions-id-change",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangeSubscriptionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          },
          "201": {
            "description": "New version of Subscription created."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/cancel/{id}": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Cancel Subscription",
        "operationId": "post-subscriptions-cancel-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "subscription id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CancelSubscriptionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/renew/{id}": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Renew Subscription",
        "operationId": "post-subscriptions-renew-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "subscription id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RenewSubscriptionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/revert/{id}": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Revert Subscription",
        "operationId": "post-subscriptions-revert-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "subscription id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/activate/{id}": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Activate Subscription",
        "operationId": "post-subscriptions-activate-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/{id}/milestones": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscription Milestones",
        "operationId": "get-subscriptions-id-milestones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "subscription id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionMilestoneResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/milestones/set/{id}": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Set Subscription Milestone date",
        "operationId": "post-subscriptions-milestones-set-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subscription Milestone Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SetSubscriptionMilestoneRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionMilestoneResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Subscriptions/{id}/OrderDiscounts": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Edit and create OrderDiscounts",
        "description": "Edit and create OrderDiscounts on an existing order. This will create a new version of the order.",
        "operationId": "post-subscriptions-id-orderdiscounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OrderDiscountsOrder"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/TaxTemplates": {
      "get": {
        "tags": [
          "TaxTemplates"
        ],
        "summary": "Get TaxTemplates",
        "operationId": "get-taxtemplates",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxTemplateResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/TaxTemplates/{id}": {
      "get": {
        "tags": [
          "TaxTemplates"
        ],
        "summary": "Get TaxTemplates by Id",
        "operationId": "get-taxtemplates-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxTemplateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/UnitOfMeasurements": {
      "get": {
        "tags": [
          "UnitOfMeasurements"
        ],
        "summary": "Get UnitOfMeasurements",
        "operationId": "get-unitofmeasurements",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitOfMeasureListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/UnitOfMeasurements/{id}": {
      "get": {
        "tags": [
          "UnitOfMeasurements"
        ],
        "summary": "Get UnitOfMeasurements by Id",
        "operationId": "get-unitofmeasurements-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitOfMeasure"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Usage": {
      "post": {
        "tags": [
          "Usage"
        ],
        "summary": "Create Usage",
        "operationId": "post-usage",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateUsageRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Usage"
        ],
        "summary": "Get Usage",
        "operationId": "get-usage",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "Filter the results. See ODATA documentation for more information",
            "schema": {
              "type": "string",
              "example": "name eq 'Adam' and age gt 20"
            },
            "example": "name eq 'Adam' and age gt 20"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Sorting the results. See ODATA specification for more information",
            "schema": {
              "type": "string",
              "example": "accountNumber Desc"
            },
            "example": "accountNumber Desc"
          },
          {
            "name": "ModifiedAfter",
            "in": "query",
            "description": "Apply a separate modified After filter. See 'ModifiedBefore' filter for further details.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "ModifiedBefore",
            "in": "query",
            "description": "Apply a separate filter to only get records that has been modified Before the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "10/01/2024 00:00:00"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page Size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            },
            "example": 20
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "example": 1
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageResponseListPagedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Usage/{id}": {
      "patch": {
        "tags": [
          "Usage"
        ],
        "summary": "Update Usage",
        "operationId": "patch-usage-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUsageRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Usage"
        ],
        "summary": "Delete Usage",
        "operationId": "delete-usage-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Usage"
        ],
        "summary": "Get Usage by Id",
        "operationId": "get-usage-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Usage/import": {
      "post": {
        "tags": [
          "Usage"
        ],
        "summary": "Import Usage",
        "description": "Import Usage Data in csv or json format.",
        "operationId": "post-usage-import",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ImportUsageRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDataResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Webhooks",
        "operationId": "get-webhooks",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create Webhook",
        "operationId": "post-webhooks",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateWebhookRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    },
    "/Webhooks/{id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Webhook by id",
        "operationId": "get-webhooks-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete Webhook",
        "description": "",
        "operationId": "delete-webhooks-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the webhook",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detail": {
                      "type": "string",
                      "nullable": true
                    },
                    "instance": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "youniumapi"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AROperation": {
        "enum": [
          "Remove",
          "Add"
        ],
        "type": "string"
      },
      "AccountCategory": {
        "enum": [
          "New",
          "Existing",
          "Lost"
        ],
        "type": "string"
      },
      "AccountPatchRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ],
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKeyCurrency"
              }
            ],
            "description": "Allowed as string input: Code, Currency-Id.",
            "nullable": true,
            "example": "SEK"
          },
          "ourReference": {
            "type": "string",
            "nullable": true
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "invoiceEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "reminderEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "invoiceEmailCcAddresses": {
            "type": "string",
            "nullable": true
          },
          "invoiceDeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceDeliveryMethod"
              }
            ],
            "nullable": true
          },
          "defaultPaymentTerm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, PaymentTerm-Id.",
            "nullable": true,
            "example": "NET30"
          },
          "taxRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "electronicInvoiceAddress": {
            "type": "string",
            "nullable": true
          },
          "electronicInvoiceAddressScheme": {
            "type": "string",
            "description": "Electronic invoice scheme (EAS) code list.  Read more on: https://docs.peppol.eu/poacc/billing/3.0/codelist/eas/",
            "nullable": true,
            "example": "0007"
          },
          "inactive": {
            "type": "boolean"
          },
          "taxTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, TaxTemplate-Id.",
            "nullable": true,
            "example": "Sweden standard"
          },
          "accountsReceivable": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceBatchGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "invoiceBatchGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "invoiceSettingGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "defaultInvoiceAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressRequest"
              }
            ],
            "nullable": true
          },
          "defaultDeliveryAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressRequest"
              }
            ],
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountPatchRequestJsonMergePatchDocument": {
        "type": "object",
        "properties": {
          "model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountPatchRequest"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountPatchRequestOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IContractResolver"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountPatchRequestOperation": {
        "type": "object",
        "properties": {
          "value": {
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parentAccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ]
          },
          "inactive": {
            "type": "boolean"
          },
          "invoiceDeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceDeliveryMethod"
              }
            ]
          },
          "accountsReceivable": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "defaultPaymentTerm": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "electronicInvoiceAddress": {
            "type": "string",
            "nullable": true
          },
          "electronicInvoiceAddressScheme": {
            "type": "string",
            "description": "Electronic invoice scheme (EAS) code list.  Read more on: https://docs.peppol.eu/poacc/billing/3.0/codelist/eas/",
            "nullable": true,
            "example": "0007"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "invoiceEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "invoiceEmailCcAddresses": {
            "type": "string",
            "nullable": true
          },
          "reminderEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "ourReference": {
            "type": "string",
            "nullable": true
          },
          "taxRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "taxTemplate": {
            "type": "string",
            "nullable": true
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceBatchGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceSettingGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "defaultInvoiceAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressResponse"
              }
            ],
            "nullable": true
          },
          "defaultDeliveryAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressResponse"
              }
            ],
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressResponse"
            },
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "onlinePaymentDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OnlinePaymentDetailsResponse"
              }
            ],
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "cmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "acv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "emrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "oneTimeFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "tcv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountType": {
        "enum": [
          "Customer",
          "Reseller",
          "Subsidiary",
          "Prospect",
          "Other"
        ],
        "type": "string"
      },
      "AccountingPeriod": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "fiscalYear": {
            "type": "integer",
            "format": "int32"
          },
          "fiscalPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "fiscalQuarter": {
            "type": "integer",
            "format": "int32"
          },
          "calendarYear": {
            "type": "integer",
            "format": "int32"
          },
          "calendarMonth": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountingPeriodStatus"
              }
            ]
          },
          "closedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountingPeriodStatus": {
        "enum": [
          "Open",
          "Closed"
        ],
        "type": "string"
      },
      "AccountingTransactionResponse": {
        "type": "object",
        "properties": {
          "transactionNumber": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionSource"
              }
            ]
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionResponse"
            },
            "nullable": true
          },
          "orderChargeNumber": {
            "type": "string",
            "nullable": true
          },
          "orderChargeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "revenueScheduleItemId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionInvoiceResponse"
              }
            ],
            "nullable": true
          },
          "invoiceAccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentSettlementId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionAccountResponse"
              }
            ],
            "nullable": true
          },
          "journalId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AccountingTransactionResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingTransactionResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "county": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, Country-Id.",
            "nullable": true,
            "example": "Sweden"
          }
        },
        "additionalProperties": false
      },
      "AddressResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "county": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmountWithBaseCurrency": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amountInBaseCurrency": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchJobDetail": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "eventId": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingDay": {
        "enum": [
          "None",
          "FirstDayOfMonth",
          "LastDayOfMonth",
          "FromOrder",
          "FromCharge",
          "FromAccount",
          "SpecificDay",
          "DaysOffset"
        ],
        "type": "string"
      },
      "BillingPeriod": {
        "enum": [
          "Monthly",
          "Quarterly",
          "Annual",
          "EndOfTerm",
          "Biannual"
        ],
        "type": "string"
      },
      "BillingPeriodAlignment": {
        "enum": [
          "None",
          "AlignToOrder",
          "AlignToCharge",
          "AlignToMonth",
          "AlignToCalendarQuarter",
          "AlignToDate"
        ],
        "type": "string"
      },
      "BillingTiming": {
        "enum": [
          "InAdvance",
          "InArrears"
        ],
        "type": "string"
      },
      "BookingClassificationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "chartColor": {
            "type": "string",
            "nullable": true
          },
          "isSystemClassification": {
            "type": "boolean"
          },
          "classificationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookingClassificationType"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookingClassificationType": {
        "enum": [
          "NewCustomer",
          "Expansion",
          "Contraction",
          "CustomerChurn",
          "NoChange",
          "SplitOrder"
        ],
        "type": "string"
      },
      "BookingLineResponse": {
        "type": "object",
        "properties": {
          "charge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleOrderProductChargeModel"
              }
            ],
            "nullable": true
          },
          "cmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "acv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "emrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "oneTimeFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "tcv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "fmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BookingResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "bookingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookingType"
              }
            ]
          },
          "accountCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountCategory"
              }
            ]
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChangeType"
              }
            ]
          },
          "cmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountWithBaseCurrency"
              }
            ],
            "nullable": true
          },
          "acv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountWithBaseCurrency"
              }
            ],
            "nullable": true
          },
          "emrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountWithBaseCurrency"
              }
            ],
            "nullable": true
          },
          "oneTimeFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountWithBaseCurrency"
              }
            ],
            "nullable": true
          },
          "tcv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountWithBaseCurrency"
              }
            ],
            "nullable": true
          },
          "fmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountWithBaseCurrency"
              }
            ],
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "bookingLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookingLineResponse"
            },
            "nullable": true
          },
          "classification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookingClassificationResponse"
              }
            ],
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleOrderModel"
              }
            ],
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookingResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookingResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookingType": {
        "enum": [
          "New",
          "Change",
          "Churn"
        ],
        "type": "string"
      },
      "CCCOperation": {
        "enum": [
          "Change",
          "Create",
          "Cancel"
        ],
        "type": "string"
      },
      "CCROperation": {
        "enum": [
          "Change",
          "Create",
          "Remove"
        ],
        "type": "string"
      },
      "CancelOrderMode": {
        "enum": [
          "OnOrderCancellationDate",
          "OnChargesInvoiceToDates",
          "OnChargesEffectiveEndDates",
          "OnCustomDates"
        ],
        "type": "string"
      },
      "CancelProductOn": {
        "enum": [
          "EffectiveEndDate",
          "SpecificDate",
          "InvoiceDate"
        ],
        "type": "string"
      },
      "CancelSubscriptionRequest": {
        "required": [
          "cancellationDate",
          "cancellationMode"
        ],
        "type": "object",
        "properties": {
          "firstDayOfCancellation": {
            "type": "string",
            "description": "The first effective day of the cancellation. I.e if the subscriptions ends Dec 31, the first day of cancellation is Jan 1  ",
            "format": "date-time",
            "nullable": true,
            "example": "2024-07-01",
            "deprecated": true
          },
          "endDate": {
            "type": "string",
            "description": "Subscription end date  ",
            "format": "date-time",
            "nullable": true,
            "example": "2024-12-31"
          },
          "cancellationDate": {
            "type": "string",
            "format": "date-time"
          },
          "cancellationMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CancelOrderMode"
              }
            ]
          },
          "cancellationDatePerCharges": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "description": "List of order product charge numbers and cancellation dates  ",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeFeatureRequest": {
        "required": [
          "feature"
        ],
        "type": "object",
        "properties": {
          "operation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AROperation"
              }
            ]
          },
          "feature": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ChangeOrderProductChargeDetailsRequest": {
        "required": [
          "toQuantity"
        ],
        "type": "object",
        "properties": {
          "isInfinite": {
            "type": "boolean"
          },
          "toQuantity": {
            "type": "number",
            "format": "double"
          },
          "operation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CCROperation"
              }
            ],
            "description": "Operation for existing price details. If price details belong to a charge being created this value will always be handled as 'Created'  "
          },
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "nullable": true
          },
          "listPrice": {
            "type": "number",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fromQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "priceBase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceBase"
              }
            ],
            "nullable": true
          },
          "lineDiscountPercent": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineDiscountAmount": {
            "type": "number",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeOrderProductChargeRequest": {
        "required": [
          "alignmentDate",
          "charge",
          "effectiveEndDate",
          "effectiveStartDate",
          "endMilestone",
          "startMilestone"
        ],
        "type": "object",
        "properties": {
          "charge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: OrderProductCharge-ChargeNumber, OrderProductCharge-Id, Charge-ChargeNumber, Charge-Id.",
            "example": "OPC-000001"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "chargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeType"
              }
            ],
            "nullable": true
          },
          "priceModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeModel"
              }
            ],
            "nullable": true
          },
          "pricePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PricePeriod"
              }
            ],
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Unit.",
            "nullable": true,
            "example": "pcs"
          },
          "startOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeStartAndEndOptions"
              }
            ],
            "nullable": true
          },
          "endOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeStartAndEndOptions"
              }
            ],
            "nullable": true
          },
          "chargedThroughDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastRenewalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastPriceAdjustmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "displayPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "priceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeOrderProductChargeDetailsRequest"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeFeatureRequest"
            },
            "nullable": true
          },
          "deferredRevenueAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          },
          "recognizedRevenueAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          },
          "usageRating": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsageRating"
              }
            ],
            "nullable": true
          },
          "revenueRecognitionRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "billingDay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingDay"
              }
            ],
            "nullable": true
          },
          "specificBillingDay": {
            "type": "integer",
            "format": "int32"
          },
          "billingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriod"
              }
            ],
            "nullable": true
          },
          "billingTiming": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingTiming"
              }
            ],
            "nullable": true
          },
          "periodAlignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriodAlignment"
              }
            ],
            "nullable": true
          },
          "alignmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "taxTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, TaxTemplate-Id.",
            "nullable": true,
            "example": "Sweden standard"
          },
          "taxIncluded": {
            "type": "boolean"
          },
          "createInvoiceLinesPerTier": {
            "type": "boolean"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "recurringMonthlyAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "effectiveStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "effectiveEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "startMilestone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, Milestone-Id.",
            "example": "MilestoneName"
          },
          "endMilestone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, Milestone-Id.",
            "example": "MilestoneName"
          },
          "estimatedUsage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "estimatedQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderDiscountMappingKey": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeOrderProductRequest": {
        "required": [
          "cancelationDate",
          "product"
        ],
        "type": "object",
        "properties": {
          "operation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CCCOperation"
              }
            ]
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: OrderProduct-ProductNumber, OrderProduct-Id, Product-ProductNumber, Product-Id, Product-Name.",
            "example": "OP-000001"
          },
          "chargePlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: ChargePlanNumber, ChargePlan-Id, Name.",
            "nullable": true,
            "example": "CP-000001"
          },
          "productLineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeOrderProductChargeRequest"
            },
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "cancelProductOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CancelProductOn"
              }
            ]
          },
          "cancelationDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ChangeSubscriptionRequest": {
        "type": "object",
        "properties": {
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: AccountNumber, Account-Id, Name.",
            "nullable": true,
            "example": "A-000001"
          },
          "invoiceAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: AccountNumber, Account-Id, Name.",
            "nullable": true,
            "example": "A-000001"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "effectiveStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "effectiveChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "noticePeriodDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastRenewalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "subscriptionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TermType"
              }
            ],
            "nullable": true
          },
          "term": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "renewalTerm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "noticePeriod": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isAutoRenewed": {
            "type": "boolean",
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKeyCurrency"
              }
            ],
            "description": "Allowed as string input: Code, Currency-Id.",
            "nullable": true,
            "example": "SEK"
          },
          "invoiceSeparatly": {
            "type": "boolean",
            "nullable": true
          },
          "invoiceAddressId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "deliveryAddressId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "paymentTerm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, PaymentTerm-Id.",
            "nullable": true,
            "example": "NET30"
          },
          "orderPaymentMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderPaymentMethod"
              }
            ]
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "ourReference": {
            "type": "string",
            "nullable": true
          },
          "yourOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "buyerReference": {
            "type": "string",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "useAccountInvoiceBatchGroup": {
            "type": "boolean",
            "nullable": true
          },
          "invoiceBatchGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "invoiceBatchGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "invoicingCurrency": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeOrderProductRequest"
            },
            "nullable": true
          },
          "milestones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionMilestoneRequest"
            },
            "nullable": true
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscountsRequest"
            },
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "orderBillingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriod"
              }
            ],
            "nullable": true
          },
          "setOrderBillingPeriod": {
            "type": "boolean",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeType": {
        "enum": [
          "Upsell",
          "Downsell",
          "Renewal",
          "None",
          "PriceAdjustment",
          "Milestone",
          "CancelledDelivery",
          "AssociatedCharge",
          "SplitOrder",
          "CancelOrderProduct"
        ],
        "type": "string"
      },
      "ChargeChangeState": {
        "enum": [
          "NotChanged",
          "New",
          "Cancelled",
          "NewFromChange",
          "CancelledFromChange",
          "Credit",
          "PartialDelivery",
          "ClosedPartialDelivery",
          "Credited"
        ],
        "type": "string"
      },
      "ChargeModel": {
        "enum": [
          "Flat",
          "Quantity",
          "Volume",
          "Tiered",
          "Rated"
        ],
        "type": "string"
      },
      "ChargePlanResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "chargePlanNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "effectiveStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endOfNewSalesDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargeResponse"
            },
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ChargeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "chargeNumber": {
            "type": "string",
            "nullable": true,
            "example": "C-000001"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeModel"
              }
            ]
          },
          "chargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeType"
              }
            ]
          },
          "unitCode": {
            "type": "string",
            "nullable": true
          },
          "defaultQuantity": {
            "type": "number",
            "format": "double"
          },
          "pricePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PricePeriod"
              }
            ]
          },
          "usageRating": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsageRating"
              }
            ]
          },
          "createInvoiceLinesPerTier": {
            "type": "boolean"
          },
          "billingDay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingDay"
              }
            ]
          },
          "specificBillingDay": {
            "type": "integer",
            "format": "int32"
          },
          "billingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriod"
              }
            ]
          },
          "periodAlignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriodAlignment"
              }
            ]
          },
          "billingTiming": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingTiming"
              }
            ]
          },
          "taxTemplate": {
            "type": "string",
            "nullable": true
          },
          "taxIncluded": {
            "type": "boolean"
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "deferredRevenueAccount": {
            "type": "string",
            "nullable": true
          },
          "recognizedRevenueAccount": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "priceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceDetailsResponse"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChargeStartAndEndOptions": {
        "enum": [
          "AlignToSubscription",
          "SpecificDate",
          "Milestone"
        ],
        "type": "string"
      },
      "ChargeType": {
        "enum": [
          "OneOff",
          "Recurring",
          "Usage",
          "Measured"
        ],
        "type": "string"
      },
      "ConvertQuoteToOrderRequest": {
        "required": [
          "quote"
        ],
        "type": "object",
        "properties": {
          "quote": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ]
          },
          "activateOrder": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CountryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "twoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "threeAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAccountRequest": {
        "required": [
          "currency",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ],
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKeyCurrency"
              }
            ],
            "description": "Allowed as string input: Code, Currency-Id.",
            "example": "SEK"
          },
          "ourReference": {
            "type": "string",
            "nullable": true
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "invoiceEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "invoiceEmailCcAddresses": {
            "type": "string",
            "nullable": true
          },
          "invoiceDeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceDeliveryMethod"
              }
            ],
            "nullable": true
          },
          "defaultPaymentTerm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, PaymentTerm-Id.",
            "nullable": true,
            "example": "NET30"
          },
          "taxRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "electronicInvoiceAddress": {
            "type": "string",
            "nullable": true
          },
          "electronicInvoiceAddressScheme": {
            "type": "string",
            "description": "Electronic invoice scheme (EAS) code list.  Read more on: https://docs.peppol.eu/poacc/billing/3.0/codelist/eas/",
            "nullable": true,
            "example": "0007"
          },
          "inactive": {
            "type": "boolean"
          },
          "taxTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, TaxTemplate-Id.",
            "nullable": true,
            "example": "Sweden standard"
          },
          "accountsReceivable": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceBatchGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "invoiceBatchGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "invoiceSettingGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "reminderEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "defaultInvoiceAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressRequest"
              }
            ],
            "nullable": true
          },
          "defaultDeliveryAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressRequest"
              }
            ],
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAndPostPaymentRequest": {
        "required": [
          "invoice",
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "bankFeeAmount": {
            "type": "number",
            "format": "double"
          },
          "exchangeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "baseCurrencyAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          },
          "paymentMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, PaymentMethod-Id.",
            "example": "Standard"
          }
        },
        "additionalProperties": false
      },
      "CreateChargePlanRequest": {
        "type": "object",
        "properties": {
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateChargeRequest"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateChargeRequest": {
        "type": "object",
        "properties": {
          "PriceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePriceDetailsRequest"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureRequest"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeModel"
              }
            ],
            "nullable": true
          },
          "chargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeType"
              }
            ],
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Unit.",
            "nullable": true,
            "example": "pcs"
          },
          "pricePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PricePeriod"
              }
            ],
            "nullable": true
          },
          "usageRating": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsageRating"
              }
            ]
          },
          "measurementsRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementsRule"
              }
            ]
          },
          "defaultQuantity": {
            "type": "number",
            "format": "double"
          },
          "billingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriod"
              }
            ],
            "nullable": true
          },
          "periodAlignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriodAlignment"
              }
            ],
            "nullable": true
          },
          "billingDay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingDay"
              }
            ],
            "nullable": true
          },
          "billingTiming": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingTiming"
              }
            ],
            "nullable": true
          },
          "specificBillingDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "offsetBillingDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taxIncluded": {
            "type": "boolean",
            "nullable": true
          },
          "revenueRecognition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "taxTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, TaxTemplate-Id.",
            "nullable": true,
            "example": "Sweden standard"
          },
          "deferredRevenueAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          },
          "recognizedRevenueAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          }
        },
        "additionalProperties": false
      },
      "CreateCurrencyRequest": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCustomFieldConfigurationRequest": {
        "required": [
          "entity",
          "fieldType"
        ],
        "type": "object",
        "properties": {
          "fieldType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldType"
              }
            ]
          },
          "entity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldEntity"
              }
            ]
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "list": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "typeEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldTypeEntity"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateExchangeRateRequest": {
        "required": [
          "effectiveFromDate",
          "fromCurrency",
          "rate"
        ],
        "type": "object",
        "properties": {
          "fromCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, Currency-Id.",
            "example": "SEK"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "effectiveFromDate": {
            "type": "string",
            "format": "date-time"
          },
          "effectiveToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMeasurementRequest": {
        "required": [
          "fromDate"
        ],
        "type": "object",
        "properties": {
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: AccountNumber, Account-Id, Name.",
            "nullable": true,
            "example": "A-000001"
          },
          "order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: OrderNumber, Order-Id.",
            "nullable": true,
            "example": "O-000001"
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: ProductNumber, OrderProduct-Id.",
            "nullable": true,
            "example": "OP-000001"
          },
          "charge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: ChargeNumber, OrderProductCharge-Id.",
            "nullable": true,
            "example": "OPC-000001"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "validateData": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateOnAccountInvoiceLineRequest": {
        "required": [
          "price",
          "productName",
          "quantity",
          "recognizedRevenueAccount",
          "unitOfMeasure"
        ],
        "type": "object",
        "properties": {
          "productName": {
            "minLength": 1,
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "unitOfMeasure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Unit.",
            "example": "pcs"
          },
          "recognizedRevenueAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "example": "1510"
          },
          "taxTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, TaxTemplate-Id.",
            "nullable": true,
            "example": "Sweden standard"
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOnAccountInvoiceRequest": {
        "required": [
          "currency"
        ],
        "type": "object",
        "properties": {
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: AccountNumber, Account-Id, Name.",
            "nullable": true,
            "example": "A-000001"
          },
          "invoiceAction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GenerateInvoiceAction"
              }
            ],
            "description": "Specify if the invoice should be posted and how to handle draft in case of failure. By default an invoice draft is created first in any case.  "
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "yourOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "ourReference": {
            "type": "string",
            "nullable": true
          },
          "accountsReceivable": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          },
          "paymentTerm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, PaymentTerm-Id.",
            "nullable": true,
            "example": "NET30"
          },
          "invoiceTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Description, DocumentTemplate_Invoice-Id.",
            "nullable": true,
            "example": "InvoiceTemplate"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKeyCurrency"
              }
            ],
            "description": "Allowed as string input: Code, Currency-Id.",
            "example": "SEK"
          },
          "invoiceDeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceDeliveryMethod"
              }
            ],
            "nullable": true
          },
          "invoiceAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressRequest"
              }
            ],
            "nullable": true
          },
          "deliveryAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressRequest"
              }
            ],
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "invoiceLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOnAccountInvoiceLineRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrderProductChargeDetailsRequest": {
        "type": "object",
        "properties": {
          "toQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "nullable": true
          },
          "listPrice": {
            "type": "number",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fromQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "priceBase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceBase"
              }
            ],
            "nullable": true
          },
          "lineDiscountPercent": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineDiscountAmount": {
            "type": "number",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrderProductChargeRequest": {
        "required": [
          "alignmentDate",
          "deferredRevenueAccount",
          "effectiveEndDate",
          "effectiveStartDate",
          "endMilestone",
          "priceDetails",
          "recognizedRevenueAccount",
          "startMilestone"
        ],
        "type": "object",
        "properties": {
          "charge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "chargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeType"
              }
            ],
            "nullable": true
          },
          "priceModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeModel"
              }
            ],
            "nullable": true
          },
          "effectiveStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "effectiveEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "startMilestone": {
            "minLength": 1,
            "type": "string"
          },
          "endMilestone": {
            "minLength": 1,
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Unit.",
            "nullable": true,
            "example": "pcs"
          },
          "startOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeStartAndEndOptions"
              }
            ],
            "nullable": true
          },
          "endOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeStartAndEndOptions"
              }
            ],
            "nullable": true
          },
          "chargedThroughDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastRenewalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastPriceAdjustmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pricePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PricePeriod"
              }
            ],
            "nullable": true
          },
          "usageRating": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsageRating"
              }
            ],
            "nullable": true
          },
          "revenueRecognitionRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "billingDay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingDay"
              }
            ],
            "nullable": true
          },
          "specificBillingDay": {
            "type": "integer",
            "format": "int32"
          },
          "billingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriod"
              }
            ],
            "nullable": true
          },
          "billingTiming": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingTiming"
              }
            ],
            "nullable": true
          },
          "periodAlignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriodAlignment"
              }
            ],
            "nullable": true
          },
          "alignmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "taxTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, TaxTemplate-Id.",
            "nullable": true,
            "example": "Sweden standard"
          },
          "taxIncluded": {
            "type": "boolean",
            "nullable": true
          },
          "createInvoiceLinesPerTier": {
            "type": "boolean",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "deferredRevenueAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "example": "1510"
          },
          "recognizedRevenueAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "example": "1510"
          },
          "changeState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeChangeState"
              }
            ]
          },
          "displayPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "priceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrderProductChargeDetailsRequest"
            }
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureRequest"
            },
            "nullable": true
          },
          "estimatedUsage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "estimatedQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderedQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "recurringMonthlyAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "orderDiscountMappingKey": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrderProductRequest": {
        "required": [
          "charges"
        ],
        "type": "object",
        "properties": {
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: ProductNumber, Product-Id, Name.",
            "nullable": true,
            "example": "P-000001"
          },
          "chargePlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: ChargePlanNumber, ChargePlan-Id, Name.",
            "nullable": true,
            "example": "CP-000001"
          },
          "productLineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrderProductChargeRequest"
            }
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePaymentRequest": {
        "required": [
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKeyCurrency"
              }
            ],
            "description": "Allowed as string input: Code, Currency-Id.",
            "nullable": true,
            "example": "SEK"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "bankFeeAmount": {
            "type": "number",
            "format": "double"
          },
          "exchangeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "baseCurrencyAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          },
          "BankFeeAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          },
          "paymentMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, PaymentMethod-Id.",
            "example": "Standard"
          },
          "paymentWriteOffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateWriteOffRequest"
            },
            "description": "Payment write offs is not implemented yet  ",
            "nullable": true
          },
          "payerName": {
            "type": "string",
            "nullable": true
          },
          "payerInformation": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalBankId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePaymentTermRequest": {
        "required": [
          "days",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "days": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreatePriceDetailsRequest": {
        "type": "object",
        "properties": {
          "isInfinite": {
            "type": "boolean"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKeyCurrency"
              }
            ],
            "description": "Allowed as string input: Code, Currency-Id.",
            "nullable": true,
            "example": "SEK"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "priceBase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceBase"
              }
            ],
            "nullable": true
          },
          "tier": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProductRequest": {
        "type": "object",
        "properties": {
          "productType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductType"
              }
            ]
          },
          "chargePlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateChargePlanRequest"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, ProductCategory-Id.",
            "nullable": true,
            "example": "Add-on"
          },
          "activationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSalesOrderRequest": {
        "required": [
          "account"
        ],
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SalesOrderStatuses"
              }
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "effectiveStartDate": {
            "type": "string",
            "description": "Obsolete field. Use order date instead. order Date will override this value  ",
            "format": "date-time",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SalesOrderType"
              }
            ]
          },
          "orderPaymentMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderPaymentMethod"
              }
            ]
          },
          "invoiceSeparatly": {
            "type": "boolean",
            "nullable": true
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "ourReference": {
            "type": "string",
            "nullable": true
          },
          "yourOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "buyerReference": {
            "type": "string",
            "nullable": true
          },
          "invoiceAddressId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deliveryAddressId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentTerm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, PaymentTerm-Id.",
            "nullable": true,
            "example": "NET30"
          },
          "useAccountInvoiceBatchGroup": {
            "type": "boolean",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: AccountNumber, Account-Id, Name.",
            "example": "A-000001"
          },
          "invoiceAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: AccountNumber, Account-Id, Name.",
            "nullable": true,
            "example": "A-000001"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKeyCurrency"
              }
            ],
            "description": "Allowed as string input: Code, Currency-Id.",
            "nullable": true,
            "example": "SEK"
          },
          "invoicingCurrency": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrderProductRequest"
            },
            "nullable": true
          },
          "milestones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionMilestoneRequest"
            },
            "nullable": true
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscountsRequest"
            },
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceBatchGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "invoiceBatchGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSubscriptionRequest": {
        "required": [
          "account",
          "products",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              }
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "effectiveStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "noticePeriodDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastRenewalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "noticePeriod": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "term": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "renewalTerm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isAutoRenewed": {
            "type": "boolean",
            "nullable": true
          },
          "orderType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderType"
              }
            ],
            "nullable": true
          },
          "subscriptionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TermType"
              }
            ],
            "nullable": true
          },
          "orderPaymentMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderPaymentMethod"
              }
            ]
          },
          "invoiceSeparatly": {
            "type": "boolean",
            "nullable": true
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "ourReference": {
            "type": "string",
            "nullable": true
          },
          "yourOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "buyerReference": {
            "type": "string",
            "nullable": true
          },
          "invoiceAddressId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deliveryAddressId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "paymentTerm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, PaymentTerm-Id.",
            "nullable": true,
            "example": "NET30"
          },
          "useAccountInvoiceBatchGroup": {
            "type": "boolean",
            "nullable": true
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: AccountNumber, Account-Id, Name.",
            "example": "A-000001"
          },
          "invoiceAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: AccountNumber, Account-Id, Name.",
            "nullable": true,
            "example": "A-000001"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKeyCurrency"
              }
            ],
            "description": "Allowed as string input: Code, Currency-Id.",
            "nullable": true,
            "example": "SEK"
          },
          "invoicingCurrency": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrderProductRequest"
            }
          },
          "milestones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionMilestoneRequest"
            },
            "nullable": true
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscountsRequest"
            },
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceBatchGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "invoiceBatchGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "orderBillingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriod"
              }
            ],
            "nullable": true
          },
          "setOrderBillingPeriod": {
            "type": "boolean",
            "description": "If true, billing period will be set from order billing period and billing period on charges will be ignored.  ",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUsageRequest": {
        "required": [
          "fromDate"
        ],
        "type": "object",
        "properties": {
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: AccountNumber, Account-Id, Name.",
            "nullable": true,
            "example": "A-000001"
          },
          "order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: OrderNumber, Order-Id.",
            "nullable": true,
            "example": "O-000001"
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: ProductNumber, OrderProduct-Id.",
            "nullable": true,
            "example": "OP-000001"
          },
          "charge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: ChargeNumber, OrderProductCharge-Id.",
            "nullable": true,
            "example": "OPC-000001"
          },
          "unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Unit.",
            "nullable": true,
            "example": "pcs"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "ratedPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ratedPriceCurrency": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "validateData": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateWebhookRequest": {
        "required": [
          "events",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "webhookStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookStatus"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CreateWriteOffRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "postingText": {
            "type": "string",
            "nullable": true
          },
          "financialAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          }
        },
        "additionalProperties": false
      },
      "CreditInvoiceRequest": {
        "type": "object",
        "properties": {
          "creditInvoiceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceAction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GenerateInvoiceAction"
              }
            ]
          },
          "invoiceLineIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "creditAllInvoiceLines": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Currency": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "currencyConversionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "baseCurrencyAmount": {
            "type": "number",
            "format": "double"
          },
          "baseCurrencyCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomFieldConfigurationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "fieldType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldType"
              }
            ]
          },
          "entity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldEntity"
              }
            ]
          },
          "list": {
            "type": "string",
            "nullable": true
          },
          "typeEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldTypeEntity"
              }
            ],
            "nullable": true
          },
          "entityObject": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomFieldConfigurationResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldConfigurationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomFieldEntity": {
        "enum": [
          "Account",
          "Order",
          "OrderProduct",
          "OrderProductCharge",
          "Product",
          "ChargePlan",
          "Charge",
          "ChargeDetails",
          "Quote",
          "QuoteProduct",
          "QuoteProductCharge",
          "Invoice",
          "InvoiceLine",
          "Posting",
          "Measurement",
          "Usage",
          "Country"
        ],
        "type": "string"
      },
      "CustomFieldType": {
        "enum": [
          "Text",
          "Integer",
          "Checkbox",
          "Amount",
          "Date",
          "Entity",
          "Enum",
          "List",
          "DecimalNumber"
        ],
        "type": "string"
      },
      "CustomFieldTypeEntity": {
        "enum": [
          "Account",
          "User"
        ],
        "type": "string"
      },
      "DocumentTemplateResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "DocumentTemplateResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentTemplateResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentType": {
        "enum": [
          "Invoice",
          "OrderConfirmation",
          "Journal",
          "FinancialAccountSummary",
          "PasswordRequestNewUser",
          "PasswordRequest",
          "PackingSlip",
          "OrderGeneric",
          "InvoiceReminderGeneric",
          "StripePaymentDetailsRequest",
          "FinancialAccountReport",
          "AccountBalanceReport",
          "Quote",
          "ReportDocument",
          "AccountStatementReport"
        ],
        "type": "string"
      },
      "ESigningState": {
        "enum": [
          "Started",
          "Completed",
          "Expired",
          "Stopped",
          "Rejected",
          "Failed",
          "UnKnownStatus"
        ],
        "type": "string"
      },
      "EventResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExchangeRateResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fromCurrency": {
            "type": "string",
            "nullable": true
          },
          "toCurrency": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "effectiveFromDate": {
            "type": "string",
            "format": "date-time"
          },
          "effectiveToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExchangeRateResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeRateResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeatureRequest": {
        "required": [
          "feature"
        ],
        "type": "object",
        "properties": {
          "feature": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "FeatureResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeatureResponsePagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FeatureResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinancialAccountResponse": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinancialAccountResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialAccountResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateInvoiceAction": {
        "enum": [
          "CreateDraft",
          "CreateDraftAndPostInvoice",
          "CancelDraftIfPostFail"
        ],
        "type": "string"
      },
      "GenerateInvoiceBatchRequest": {
        "type": "object",
        "properties": {
          "invoiceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customizedTargetDates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetDatesRequest"
              }
            ],
            "nullable": true
          },
          "targetDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceAllAccounts": {
            "type": "boolean"
          },
          "invoiceAllBatchGroups": {
            "type": "boolean"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "invoiceBatchGroups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "minimumInvoiceAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ensureWebhooksAreEnabled": {
            "type": "boolean"
          },
          "jobDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateInvoiceRequest": {
        "type": "object",
        "properties": {
          "invoiceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customizedTargetDates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetDatesRequest"
              }
            ],
            "nullable": true
          },
          "targetDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceAction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GenerateInvoiceAction"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "GeneratedBatchJobStatusResponse": {
        "type": "object",
        "properties": {
          "resultBody": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchJobDetail"
              }
            ],
            "nullable": true
          },
          "resultStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobResultStatus"
              }
            ],
            "nullable": true
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GeneratedInvoiceResponse": {
        "type": "object",
        "properties": {
          "successful": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IContractResolver": {
        "type": "object",
        "additionalProperties": false
      },
      "ImportDataResponse": {
        "type": "object",
        "properties": {
          "importDataType": {
            "type": "string",
            "nullable": true
          },
          "batchId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "hasErrors": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportMeasurementRequest": {
        "required": [
          "data",
          "mappingTemplateName"
        ],
        "type": "object",
        "properties": {
          "mappingTemplateName": {
            "minLength": 1,
            "type": "string"
          },
          "dateFormat": {
            "type": "string",
            "nullable": true
          },
          "decimalSeparator": {
            "type": "string",
            "nullable": true
          },
          "dataFormat": {
            "type": "string",
            "nullable": true
          },
          "batchName": {
            "type": "string",
            "nullable": true
          },
          "data": { },
          "usePreprocessingRules": {
            "type": "boolean"
          },
          "allowDuplicateEntries": {
            "type": "boolean"
          },
          "breakOnValidationError": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ImportUsageRequest": {
        "required": [
          "data",
          "mappingTemplateName"
        ],
        "type": "object",
        "properties": {
          "mappingTemplateName": {
            "minLength": 1,
            "type": "string"
          },
          "dateFormat": {
            "type": "string",
            "nullable": true
          },
          "decimalSeparator": {
            "type": "string",
            "nullable": true
          },
          "dataFormat": {
            "type": "string",
            "nullable": true
          },
          "batchName": {
            "type": "string",
            "nullable": true
          },
          "data": { },
          "usePreprocessingRules": {
            "type": "boolean"
          },
          "allowDuplicateEntries": {
            "type": "boolean"
          },
          "breakOnValidationError": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "InvoiceAttachmentResponse": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string",
            "format": "uuid"
          },
          "attachmentDetail": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "fileURL": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "fileURLErrorMessage": {
            "type": "string",
            "description": "Error message for failed url generation. Is null and excluded if URL generation is successful  ",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceAttachmentResponsePagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceAttachmentResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceBatchGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceBatchGroupResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceBatchGroupResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceBatchJobResponse": {
        "type": "object",
        "properties": {
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "jobId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "resultStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobResultStatus"
              }
            ],
            "nullable": true
          },
          "webhooksTriggeredWhenCompleted": {
            "type": "boolean"
          },
          "webhookEvent": {
            "type": "string",
            "nullable": true
          },
          "webhooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleWebhookModel"
            },
            "nullable": true
          },
          "eventId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceBatchLogResponse": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "InvoiceBatchLogResponsePagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceBatchLogResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceBatchResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "targetDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "batchGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleInvoiceModel"
            },
            "nullable": true
          },
          "batchLog": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceBatchLogResponse"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "InvoiceBatchResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceBatchResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceDeliveryMethod": {
        "enum": [
          "Email",
          "Print",
          "ElectronicInvoice",
          "ExternalPrint",
          "AutomaticElectronicRouting"
        ],
        "type": "string"
      },
      "InvoiceLineResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceLineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "chargeDescription": {
            "type": "string",
            "nullable": true
          },
          "chargeNumber": {
            "type": "string",
            "nullable": true
          },
          "charge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleOrderProductChargeModel"
              }
            ],
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitOfMeasure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitOfMeasure"
              }
            ],
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "subtotalPreDiscount": {
            "type": "number",
            "format": "double"
          },
          "totalPreDiscount": {
            "type": "number",
            "format": "double"
          },
          "taxPreDiscount": {
            "type": "number",
            "format": "double"
          },
          "servicePeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "servicePeriodEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "orderChargeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "chargePlanId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "orderProductId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "accountsReceivable": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountResponse"
              }
            ],
            "nullable": true
          },
          "deferredRevenue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountResponse"
              }
            ],
            "nullable": true
          },
          "recognizedRevenue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountResponse"
              }
            ],
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "taxCategoryName": {
            "type": "string",
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoicePaidRequest": {
        "required": [
          "invoiceId"
        ],
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              }
            ]
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAccountModel"
              }
            ],
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "daysPastDue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nrOfReminders": {
            "type": "integer",
            "format": "int32"
          },
          "paymentTerm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentTermModel"
              }
            ],
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "totalRoundingAmount": {
            "type": "number",
            "format": "double"
          },
          "settledAmount": {
            "type": "number",
            "format": "double"
          },
          "balancedAmount": {
            "type": "number",
            "format": "double"
          },
          "taxIncluded": {
            "type": "boolean"
          },
          "invoiceAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressResponse"
              }
            ],
            "nullable": true
          },
          "deliveryAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressResponse"
              }
            ],
            "nullable": true
          },
          "invoiceBatchId": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineResponse"
            },
            "nullable": true
          },
          "latestOnlinePaymentLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnlinePaymentLogResponse"
            },
            "description": "Includes the three latest online payment logs for the Invoice  ",
            "nullable": true
          },
          "onlinePaymentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OnlinePaymentStatusResponse"
              }
            ]
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "ourReference": {
            "type": "string",
            "nullable": true
          },
          "yourOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "buyerReference": {
            "type": "string",
            "nullable": true
          },
          "invoiceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceType"
              }
            ]
          },
          "ocrNumber": {
            "type": "string",
            "nullable": true
          },
          "sendMethod": {
            "type": "string",
            "nullable": true
          },
          "exchangeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "settledNotes": {
            "type": "string",
            "nullable": true
          },
          "invoiceDeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceDeliveryMethod"
              }
            ]
          },
          "invoiceTemplateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "disableAutomaticInvoiceReminder": {
            "type": "boolean"
          },
          "onlinePaymentLink": {
            "type": "string",
            "nullable": true
          },
          "accountsReceivable": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountResponse"
              }
            ],
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "InvoiceResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceStatus": {
        "enum": [
          "Draft",
          "Posted",
          "Cancelled",
          "Settled"
        ],
        "type": "string"
      },
      "InvoiceType": {
        "enum": [
          "Invoice",
          "Credit",
          "OnAccount"
        ],
        "type": "string"
      },
      "JobRequest": {
        "type": "object",
        "properties": {
          "ensureWebhooksAreEnabled": {
            "type": "boolean"
          },
          "jobDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobResultStatus": {
        "enum": [
          "Pending",
          "Succeeded",
          "Failed"
        ],
        "type": "string"
      },
      "JournalResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "journalNumber": {
            "type": "string",
            "nullable": true
          },
          "accountingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountingPeriod"
              }
            ],
            "nullable": true
          },
          "journalType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JournalType"
              }
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "posted": {
            "type": "boolean"
          },
          "postedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "vouchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoucherResponse"
            },
            "description": "Obsolete naming, Same entity as accounting transactions  ",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "transferredToERP": {
            "type": "string",
            "description": "Date of when journal was transferred to external ERP.  ",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-03"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "JournalResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JournalType": {
        "enum": [
          "Invoice",
          "RevenueRecognition",
          "Payment",
          "Payout",
          "Order"
        ],
        "type": "string"
      },
      "LookupKey": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Used for identifying or referencing related entities. Accept both uuid, string and key-value-pair-object as input.  Read more on: https://developer.younium.com/developer-resources#Vq4UM"
      },
      "LookupKeyCurrency": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Used for identifying or referencing related entities. Accept both uuid, string and key-value-pair-object as input.  Read more on: https://developer.younium.com/developer-resources#Vq4UM"
      },
      "MeasurementResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAccountModel"
              }
            ],
            "nullable": true
          },
          "order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleOrderModel"
              }
            ],
            "nullable": true
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleOrderProductModel"
              }
            ],
            "nullable": true
          },
          "charge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleOrderProductChargeModel"
              }
            ],
            "nullable": true
          },
          "importDate": {
            "type": "string",
            "format": "date-time"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MeasurementResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MeasurementsRule": {
        "enum": [
          "LatestDate",
          "SumLatestDate"
        ],
        "type": "string"
      },
      "OnlinePaymentDetailsRequest": {
        "type": "object",
        "properties": {
          "stripeCustomerId": {
            "type": "string",
            "nullable": true
          },
          "stripePaymentMethodId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlinePaymentDetailsRequestJsonMergePatchDocument": {
        "type": "object",
        "properties": {
          "model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OnlinePaymentDetailsRequest"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnlinePaymentDetailsRequestOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IContractResolver"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlinePaymentDetailsRequestOperation": {
        "type": "object",
        "properties": {
          "value": {
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlinePaymentDetailsResponse": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "stripeCustomerId": {
            "type": "string",
            "nullable": true
          },
          "stripePaymentMethodId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlinePaymentLogResponse": {
        "type": "object",
        "properties": {
          "failedPayment": {
            "type": "boolean"
          },
          "paymentDescription": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "payoutId": {
            "type": "string",
            "nullable": true
          },
          "isPayout": {
            "type": "boolean"
          },
          "paymentIntentId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlinePaymentLogResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnlinePaymentLogResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlinePaymentStatusResponse": {
        "enum": [
          "None",
          "Succeeded",
          "Processing",
          "Failed"
        ],
        "type": "string"
      },
      "OperationResponse": {
        "type": "object",
        "properties": {
          "successful": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderChargeDetailsResponse": {
        "type": "object",
        "properties": {
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "listPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fromQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "toQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "priceBase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceBase"
              }
            ]
          },
          "lineDiscountPercent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineDiscountAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscountStartAndEndOptions": {
        "enum": [
          "AlignToOrder",
          "SpecificeDate"
        ],
        "type": "string"
      },
      "OrderDiscountType": {
        "enum": [
          "Percent"
        ],
        "type": "string"
      },
      "OrderDiscountsChargeRequest": {
        "required": [
          "charge"
        ],
        "type": "object",
        "properties": {
          "charge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: OrderProductCharge-ChargeNumber, OrderProductCharge-Id, Charge-ChargeNumber, Charge-Id.",
            "example": "OPC-000001"
          },
          "operation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AROperation"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "OrderDiscountsChargeResponse": {
        "type": "object",
        "properties": {
          "orderDiscountId": {
            "type": "string",
            "format": "uuid"
          },
          "chargeId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "OrderDiscountsOrder": {
        "type": "object",
        "properties": {
          "effectiveChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscountsRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscountsRequest": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "operation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CCROperation"
              }
            ]
          },
          "OrderDiscountId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: OrderDiscount-Id.",
            "nullable": true,
            "example": "GUID"
          },
          "startOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StartAndEndOptions"
              }
            ]
          },
          "endOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StartAndEndOptions"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "percent": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "onSpecificCharges": {
            "type": "boolean",
            "nullable": true
          },
          "orderProductCharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscountsChargeRequest"
            },
            "nullable": true
          },
          "chargeMappingKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscountsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "startOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderDiscountStartAndEndOptions"
              }
            ]
          },
          "endOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderDiscountStartAndEndOptions"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "percent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "discountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderDiscountType"
              }
            ]
          },
          "orderProductCharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscountsChargeResponse"
            },
            "nullable": true
          },
          "onSpecificCharges": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentMethod": {
        "enum": [
          "Invoice",
          "Stripe"
        ],
        "type": "string"
      },
      "OrderProductChargeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "chargeNumber": {
            "type": "string",
            "nullable": true,
            "example": "OPC-000001"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "isLastVersion": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "chargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeType"
              }
            ]
          },
          "priceModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeModel"
              }
            ]
          },
          "effectiveStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitCode": {
            "type": "string",
            "nullable": true
          },
          "startOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeStartAndEndOptions"
              }
            ]
          },
          "endOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeStartAndEndOptions"
              }
            ]
          },
          "chargedThroughDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastRenewalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastPriceAdjustmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pricePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PricePeriod"
              }
            ]
          },
          "usageRating": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsageRating"
              }
            ]
          },
          "revenueRecognitionRule": {
            "type": "string",
            "nullable": true
          },
          "billingDay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingDay"
              }
            ]
          },
          "specificBillingDay": {
            "type": "integer",
            "format": "int32"
          },
          "billingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriod"
              }
            ]
          },
          "billingTiming": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingTiming"
              }
            ]
          },
          "periodAlignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriodAlignment"
              }
            ]
          },
          "alignmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taxTemplate": {
            "type": "string",
            "nullable": true
          },
          "taxIncluded": {
            "type": "boolean"
          },
          "createInvoiceLinesPerTier": {
            "type": "boolean"
          },
          "estimatedUsage": {
            "type": "integer",
            "format": "int32"
          },
          "estimatedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "remainingQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "orderedQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "accountsReceivableAccount": {
            "type": "string",
            "nullable": true
          },
          "deferredRevenueAccount": {
            "type": "string",
            "nullable": true
          },
          "recognizedRevenueAccount": {
            "type": "string",
            "nullable": true
          },
          "changeState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeChangeState"
              }
            ]
          },
          "displayPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "priceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderChargeDetailsResponse"
            },
            "nullable": true
          },
          "recurringMonthlyAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "recurringMonthlyAmountBase": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureResponse"
            },
            "nullable": true
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscountsChargeResponse"
            },
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "cmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "acv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "tcv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "emrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "oneTimeFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "orderProductId": {
            "type": "string",
            "format": "uuid"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "chargeId": {
            "type": "string",
            "description": "Id of the charge used to create the order product charge. Not to be confused with field 'id'  ",
            "format": "uuid",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "OrderProductChargeResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductChargeResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "chargePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "chargePlanName": {
            "type": "string",
            "nullable": true
          },
          "chargePlanNumber": {
            "type": "string",
            "nullable": true
          },
          "productLineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductChargeResponse"
            },
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "cmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "acv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "emrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "oneTimeFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "tcv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "OrderStatus": {
        "enum": [
          "Draft",
          "Active",
          "Cancelled",
          "Inactive",
          "Deleted",
          "OrderDraft",
          "Order",
          "PartiallyDelivered",
          "Delivered",
          "Invoiced",
          "PartiallyPaid",
          "Paid"
        ],
        "type": "string"
      },
      "OrderType": {
        "enum": [
          "Subscription",
          "SalesOrder"
        ],
        "type": "string"
      },
      "PatchInvoiceRequest": {
        "type": "object",
        "properties": {
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceDeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceDeliveryMethod"
              }
            ]
          },
          "disableAutomaticInvoiceReminder": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "yourOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchInvoiceRequestJsonMergePatchDocument": {
        "type": "object",
        "properties": {
          "model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PatchInvoiceRequest"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchInvoiceRequestOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IContractResolver"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchInvoiceRequestOperation": {
        "type": "object",
        "properties": {
          "value": {
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchJournalRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "transferredToERP": {
            "type": "string",
            "description": "Date of when journal was transferred to external ERP.  ",
            "format": "date-time",
            "nullable": true,
            "example": "2022-12-03"
          }
        },
        "additionalProperties": false
      },
      "PatchJournalRequestJsonMergePatchDocument": {
        "type": "object",
        "properties": {
          "model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PatchJournalRequest"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchJournalRequestOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IContractResolver"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchJournalRequestOperation": {
        "type": "object",
        "properties": {
          "value": {
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchSubscriptionRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "noticePeriod": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceSeparatly": {
            "type": "boolean"
          },
          "useAccountInvoiceBatchGroup": {
            "type": "boolean"
          },
          "invoiceBatchGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "invoiceBatchGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "buyerReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchSubscriptionRequestJsonMergePatchDocument": {
        "type": "object",
        "properties": {
          "model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PatchSubscriptionRequest"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchSubscriptionRequestOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IContractResolver"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchSubscriptionRequestOperation": {
        "type": "object",
        "properties": {
          "value": {
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "payerName": {
            "type": "string",
            "nullable": true
          },
          "payerInformation": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "postedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "bankFeeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "exchangeRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountResponse"
              }
            ],
            "nullable": true
          },
          "BankFeeAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountResponse"
              }
            ],
            "nullable": true
          },
          "paymentMethodName": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentBatchNumber": {
            "type": "string",
            "nullable": true
          },
          "paymentBatchId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentSettlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentSettlementResponse"
            },
            "nullable": true
          },
          "paymentWriteOffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WriteOffResponse"
            },
            "description": "Payment write offs is not implemented yet  ",
            "nullable": true
          },
          "externalBankId": {
            "type": "string",
            "nullable": true
          },
          "onlinePaymentIntentId": {
            "type": "string",
            "nullable": true
          },
          "onlinePaymentChargeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentSettlementInvoiceResponse": {
        "type": "object",
        "properties": {
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAccountModel"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              }
            ]
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "buyerReference": {
            "type": "string",
            "nullable": true
          },
          "ocrNumber": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "settledAmount": {
            "type": "number",
            "format": "double"
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentSettlementRequest": {
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "operation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CCROperation"
              }
            ],
            "description": "Default value is Create.  "
          },
          "invoice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: InvoiceNumber, Invoice_Posted-Id, OCRNumber, ReferenceNumber.",
            "example": "IP-000001"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "writeOffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateWriteOffRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentSettlementResponse": {
        "type": "object",
        "properties": {
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "invoice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentSettlementInvoiceResponse"
              }
            ],
            "nullable": true
          },
          "writeOffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WriteOffResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentTermModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "days": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentTermResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "termType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentTermType"
              }
            ]
          },
          "days": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentTermResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentTermResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentTermType": {
        "enum": [
          "NetDays"
        ],
        "type": "string"
      },
      "PostedBatchJobStatusResponse": {
        "type": "object",
        "properties": {
          "resultBody": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchJobDetail"
            },
            "nullable": true
          },
          "resultStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobResultStatus"
              }
            ],
            "nullable": true
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PriceBase": {
        "enum": [
          "Flat",
          "PerUnit"
        ],
        "type": "string"
      },
      "PriceDetailsResponse": {
        "required": [
          "currency",
          "price"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "minLength": 1,
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "tier": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fromQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "toQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "priceBase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceBase"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PricePeriod": {
        "enum": [
          "Monthly",
          "Quarterly",
          "Annual"
        ],
        "type": "string"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProcessedOnlinePaymentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OnlinePaymentStatusResponse"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductType"
              }
            ]
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "activationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endOfNewSalesDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endOfRenewalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endOfLifeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFrameworkProduct": {
            "type": "boolean"
          },
          "chargePlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargePlanResponse"
            },
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductType": {
        "enum": [
          "Simple",
          "MultipleCharges",
          "MultipleChargePlans",
          "Full"
        ],
        "type": "string"
      },
      "QuoteChargeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "quoteProductChargeId": {
            "type": "string",
            "format": "uuid"
          },
          "chargeNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "charge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleChargeModel"
              }
            ],
            "nullable": true
          },
          "originalOrderProductChargeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "chargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeType"
              }
            ]
          },
          "priceModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeModel"
              }
            ]
          },
          "startOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeStartAndEndOptions"
              }
            ]
          },
          "endOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeStartAndEndOptions"
              }
            ]
          },
          "effectiveStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitCode": {
            "type": "string",
            "nullable": true
          },
          "pricePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PricePeriod"
              }
            ]
          },
          "usageRating": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsageRating"
              }
            ]
          },
          "billingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriod"
              }
            ]
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "displayPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ppu": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "priceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderChargeDetailsResponse"
            },
            "nullable": true
          },
          "cmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "acv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "tcv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuoteConvertedResponse": {
        "type": "object",
        "properties": {
          "quoteId": {
            "type": "string",
            "format": "uuid"
          },
          "quoteNumber": {
            "type": "string",
            "nullable": true
          },
          "quote": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuoteResponse"
              }
            ],
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "orderType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderType"
              }
            ]
          },
          "orderStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "QuoteESigningResponse": {
        "type": "object",
        "properties": {
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ESigningState"
              }
            ]
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "validToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuoteProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "chargePlanId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "chargePlanName": {
            "type": "string",
            "nullable": true
          },
          "chargePlanNumber": {
            "type": "string",
            "nullable": true
          },
          "productLineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuoteChargeResponse"
            },
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "cmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "acv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "tcv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuoteResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuoteStatus"
              }
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "quoteType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuoteType"
              }
            ]
          },
          "changeOrderId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "convertedToOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleOrderModel"
              }
            ],
            "nullable": true
          },
          "customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAccountModel"
              }
            ],
            "nullable": true
          },
          "invoiceCustomer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAccountModel"
              }
            ],
            "nullable": true
          },
          "orderType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderType"
              }
            ]
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "deliveryAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressResponse"
              }
            ],
            "nullable": true
          },
          "quoteDate": {
            "type": "string",
            "format": "date-time"
          },
          "validToDate": {
            "type": "string",
            "format": "date-time"
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "ourReference": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "description": "Additional information, copied to the order remark  ",
            "nullable": true
          },
          "initialTerm": {
            "type": "integer",
            "format": "int32"
          },
          "orderEffectiveChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "effectiveStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "effectiveEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "termType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TermType"
              }
            ]
          },
          "renewalTerm": {
            "type": "integer",
            "format": "int32"
          },
          "autoRenewal": {
            "type": "boolean"
          },
          "noticePeriod": {
            "type": "integer",
            "format": "int32"
          },
          "tcv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "cmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "acv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuoteProductResponse"
            },
            "nullable": true
          },
          "quoteESignings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuoteESigningResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuoteResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuoteResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuoteStatus": {
        "enum": [
          "Open",
          "ClosedLost",
          "ClosedWon",
          "Deleted"
        ],
        "type": "string"
      },
      "QuoteType": {
        "enum": [
          "New",
          "Change"
        ],
        "type": "string"
      },
      "RenewSubscriptionRequest": {
        "required": [
          "nextRenewalTerm",
          "renewalTerm"
        ],
        "type": "object",
        "properties": {
          "renewalTerm": {
            "type": "integer",
            "format": "int32"
          },
          "nextRenewalTerm": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RevenueScheduleInvoiceLineResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceId": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitCode": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "subtotalPreDiscount": {
            "type": "number",
            "format": "double"
          },
          "totalPreDiscount": {
            "type": "number",
            "format": "double"
          },
          "taxPreDiscount": {
            "type": "number",
            "format": "double"
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "servicePeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "servicePeriodEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "accountsReceivableAccount": {
            "type": "string",
            "nullable": true
          },
          "deferredRevenueAccount": {
            "type": "string",
            "nullable": true
          },
          "recognizedRevenueAccount": {
            "type": "string",
            "nullable": true
          },
          "taxCategoryName": {
            "type": "string",
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RevenueScheduleItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "deferredRevenue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "recognizedRevenue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "accountingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountingPeriod"
              }
            ],
            "nullable": true
          },
          "invoiceLine": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RevenueScheduleInvoiceLineResponse"
              }
            ],
            "nullable": true
          },
          "orderProductCharge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleOrderProductChargeModel"
              }
            ],
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RevenueScheduleItemResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RevenueScheduleItemResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesOrderResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "isLastVersion": {
            "type": "boolean"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              }
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderType"
              }
            ]
          },
          "invoiceSeparatly": {
            "type": "boolean"
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "ourReference": {
            "type": "string",
            "nullable": true
          },
          "yourOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "buyerReference": {
            "type": "string",
            "nullable": true
          },
          "invoiceAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressResponse"
              }
            ],
            "nullable": true
          },
          "deliveryAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressResponse"
              }
            ],
            "nullable": true
          },
          "paymentTerm": {
            "type": "string",
            "nullable": true
          },
          "orderPaymentMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderPaymentMethod"
              }
            ]
          },
          "invoiceBatchGroup": {
            "type": "string",
            "nullable": true
          },
          "useAccountInvoiceBatchGroup": {
            "type": "boolean"
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAccountModel"
              }
            ],
            "nullable": true
          },
          "invoiceAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAccountModel"
              }
            ],
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "accountsReceivableAccount": {
            "type": "string",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductResponse"
            },
            "nullable": true
          },
          "milestones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionMilestoneResponse"
            },
            "nullable": true
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscountsResponse"
            },
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "invoicingCurrency": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesOrderResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesOrderResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesOrderStatuses": {
        "enum": [
          "OrderDraft",
          "Order"
        ],
        "type": "string"
      },
      "SalesOrderType": {
        "enum": [
          "SalesOrder"
        ],
        "type": "string"
      },
      "SetSubscriptionMilestoneRequest": {
        "required": [
          "milestoneDate"
        ],
        "type": "object",
        "properties": {
          "milestoneDate": {
            "type": "string",
            "format": "date-time"
          },
          "milestoneId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SimpleAccountModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleChargeModel": {
        "type": "object",
        "properties": {
          "chargeNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleInvoiceModel": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              }
            ]
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleOrderModel": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleOrderProductChargeModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "chargeNumber": {
            "type": "string",
            "nullable": true,
            "example": "OPC-000001"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleOrderProductModel": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleProduct": {
        "required": [
          "category",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "category": {
            "minLength": 1,
            "type": "string"
          },
          "chargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeType"
              }
            ]
          },
          "priceModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeModel"
              }
            ]
          },
          "pricePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PricePeriod"
              }
            ],
            "nullable": true
          },
          "defaultQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitCode": {
            "type": "string",
            "nullable": true
          },
          "billingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriod"
              }
            ],
            "nullable": true
          },
          "billingDay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingDay"
              }
            ]
          },
          "specificBillingDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "periodAlignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriodAlignment"
              }
            ],
            "nullable": true
          },
          "billingTiming": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingTiming"
              }
            ],
            "nullable": true
          },
          "taxTemplate": {
            "type": "string",
            "nullable": true
          },
          "taxIncluded": {
            "type": "boolean"
          },
          "deferredRevenueAccount": {
            "type": "string",
            "nullable": true
          },
          "recognizedRevenueAccount": {
            "type": "string",
            "nullable": true
          },
          "externalERPid": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "activationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endOfNewSalesDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endOfRenewalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endOfLifeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "usageRating": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsageRating"
              }
            ],
            "nullable": true
          },
          "createInvoiceLinesPerTier": {
            "type": "boolean",
            "nullable": true
          },
          "priceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceDetailsResponse"
            },
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleProductListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleProduct"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleWebhookModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StartAndEndOptions": {
        "enum": [
          "AlignToOrder",
          "SpecificDate"
        ],
        "type": "string"
      },
      "StringObjectDictionaryListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionMilestoneRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "plannedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionMilestoneResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "milestoneDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "isLastVersion": {
            "type": "boolean"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              }
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "effectiveStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "effectiveEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancellationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "effectiveChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "noticePeriodDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastRenewalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "description": "Date of when latest update occurred on the order or it's sub entities  ",
            "format": "date-time",
            "nullable": true,
            "example": "2024-07-01"
          },
          "noticePeriod": {
            "type": "integer",
            "format": "int32"
          },
          "term": {
            "type": "integer",
            "format": "int32"
          },
          "renewalTerm": {
            "type": "integer",
            "format": "int32"
          },
          "isAutoRenewed": {
            "type": "boolean"
          },
          "orderType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderType"
              }
            ]
          },
          "termType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TermType"
              }
            ]
          },
          "orderPaymentMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderPaymentMethod"
              }
            ]
          },
          "invoiceSeparatly": {
            "type": "boolean"
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "ourReference": {
            "type": "string",
            "nullable": true
          },
          "yourOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "buyerReference": {
            "type": "string",
            "nullable": true
          },
          "invoiceAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressResponse"
              }
            ],
            "nullable": true
          },
          "deliveryAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressResponse"
              }
            ],
            "nullable": true
          },
          "orderBillingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriod"
              }
            ]
          },
          "setOrderBillingPeriod": {
            "type": "boolean"
          },
          "invoiceBatchGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceBatchGroupResponse"
              }
            ],
            "nullable": true
          },
          "paymentTerm": {
            "type": "string",
            "nullable": true
          },
          "useAccountInvoiceBatchGroup": {
            "type": "boolean"
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAccountModel"
              }
            ],
            "nullable": true
          },
          "invoiceAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAccountModel"
              }
            ],
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductResponse"
            },
            "nullable": true
          },
          "milestones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionMilestoneResponse"
            },
            "nullable": true
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscountsResponse"
            },
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "currencyCodeToUseWhenInvoice": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "cmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "acv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "emrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "oneTimeFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "tcv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TargetDatesRequest": {
        "type": "object",
        "properties": {
          "oneOff": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "recurringInAdvance": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "recurringInArrears": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "usage": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "measured": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxCategoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isEUTax": {
            "type": "boolean"
          },
          "externalCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxTemplateDetailsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "taxTemplateId": {
            "type": "string",
            "format": "uuid"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryResponse"
              }
            ],
            "nullable": true
          },
          "countryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "county": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "tax1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tax2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tax3": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "useTaxJar": {
            "type": "boolean"
          },
          "taxCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "taxCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxCategoryResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxTemplateResponse": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "effectiveFrom": {
            "type": "string",
            "format": "date-time"
          },
          "effectiveTo": {
            "type": "string",
            "format": "date-time"
          },
          "taxAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountResponse"
              }
            ],
            "nullable": true
          },
          "taxAccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxTemplateDetailsResponse"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxTemplateResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxTemplateResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TermType": {
        "enum": [
          "Termed",
          "Evergreen"
        ],
        "type": "string"
      },
      "TransactionAccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ]
          },
          "invoiceDeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceDeliveryMethod"
              }
            ]
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "accountsReceivable": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "taxRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "taxTemplate": {
            "type": "string",
            "nullable": true
          },
          "invoiceBatchGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceSettingGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionInvoiceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              }
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "settledAmount": {
            "type": "number",
            "format": "double"
          },
          "taxIncluded": {
            "type": "boolean"
          },
          "invoiceBatchId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceType"
              }
            ]
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "debitAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "creditAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionSource": {
        "enum": [
          "Invoicing",
          "RevenueRecognition",
          "Payment",
          "Payout"
        ],
        "type": "string"
      },
      "UnitOfMeasure": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "unitCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnitOfMeasureListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitOfMeasure"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateChargePlanRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CCROperation"
              }
            ]
          },
          "chargePlan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: ChargePlanNumber, ChargePlan-Id, Name.",
            "nullable": true,
            "example": "CP-000001"
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateChargeRequest"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateChargeRequest": {
        "type": "object",
        "properties": {
          "charge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "operation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CCROperation"
              }
            ]
          },
          "PriceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdatePriceDetailsRequest"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeFeatureRequest"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeModel"
              }
            ],
            "nullable": true
          },
          "chargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChargeType"
              }
            ],
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Unit.",
            "nullable": true,
            "example": "pcs"
          },
          "pricePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PricePeriod"
              }
            ],
            "nullable": true
          },
          "usageRating": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsageRating"
              }
            ]
          },
          "measurementsRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementsRule"
              }
            ]
          },
          "defaultQuantity": {
            "type": "number",
            "format": "double"
          },
          "billingPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriod"
              }
            ],
            "nullable": true
          },
          "periodAlignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingPeriodAlignment"
              }
            ],
            "nullable": true
          },
          "billingDay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingDay"
              }
            ],
            "nullable": true
          },
          "billingTiming": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingTiming"
              }
            ],
            "nullable": true
          },
          "specificBillingDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "offsetBillingDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taxIncluded": {
            "type": "boolean",
            "nullable": true
          },
          "revenueRecognition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "taxTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, TaxTemplate-Id.",
            "nullable": true,
            "example": "Sweden standard"
          },
          "deferredRevenueAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          },
          "recognizedRevenueAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomFieldConfigurationRequest": {
        "type": "object",
        "properties": {
          "fieldType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldType"
              }
            ],
            "nullable": true
          },
          "entity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldEntity"
              }
            ],
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "list": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "nullable": true
          },
          "typeEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldTypeEntity"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateInvoicedToDateRequest": {
        "type": "object",
        "properties": {
          "invoicedToDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdatePaymentRequest": {
        "type": "object",
        "properties": {
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentWriteOffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdatePaymentWriteOffRequest"
            },
            "description": "Payment write offs is not implemented yet  ",
            "nullable": true
          },
          "paymentSettlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentSettlementRequest"
            },
            "nullable": true
          },
          "payerName": {
            "type": "string",
            "nullable": true
          },
          "payerInformation": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalBankId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePaymentWriteOffRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CCROperation"
              }
            ]
          },
          "writeOff": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: PaymentWriteOff-Id, Description.",
            "nullable": true,
            "example": "GUID"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "postingText": {
            "type": "string",
            "nullable": true
          },
          "financialAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          }
        },
        "additionalProperties": false
      },
      "UpdatePriceDetailsRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CCROperation"
              }
            ]
          },
          "isInfinite": {
            "type": "boolean",
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKeyCurrency"
              }
            ],
            "description": "Allowed as string input: Code, Currency-Id.",
            "nullable": true,
            "example": "SEK"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "priceBase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceBase"
              }
            ],
            "nullable": true
          },
          "tier": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProductRequest": {
        "type": "object",
        "properties": {
          "productType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductType"
              }
            ],
            "nullable": true
          },
          "chargePlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateChargePlanRequest"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Name, ProductCategory-Id.",
            "nullable": true,
            "example": "Add-on"
          },
          "activationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUsageRequest": {
        "type": "object",
        "properties": {
          "unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Unit.",
            "nullable": true,
            "example": "pcs"
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ratedPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ratedPriceCurrency": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateWriteOffRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CCROperation"
              }
            ],
            "description": "Default value is Create.  "
          },
          "writeOff": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: WriteOff-Id, Description.",
            "nullable": true,
            "example": "GUID"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "postingText": {
            "type": "string",
            "nullable": true
          },
          "financialAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LookupKey"
              }
            ],
            "description": "Allowed as string input: Code, FinancialAccount-Id.",
            "nullable": true,
            "example": "1510"
          }
        },
        "additionalProperties": false
      },
      "UsageRating": {
        "enum": [
          "Sum",
          "Max",
          "Average"
        ],
        "type": "string"
      },
      "UsageResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleAccountModel"
              }
            ],
            "nullable": true
          },
          "order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleOrderModel"
              }
            ],
            "nullable": true
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleOrderProductModel"
              }
            ],
            "nullable": true
          },
          "charge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleOrderProductChargeModel"
              }
            ],
            "nullable": true
          },
          "importDate": {
            "type": "string",
            "format": "date-time"
          },
          "processed": {
            "type": "boolean"
          },
          "ratedPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ratedPriceCurrencyCode": {
            "type": "string",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Usage entry"
      },
      "UsageResponseListPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "firstPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "lastPage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsageResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VoucherResponse": {
        "type": "object",
        "properties": {
          "transactionNumber": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionSource"
              }
            ]
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionResponse"
            },
            "nullable": true
          },
          "orderChargeNumber": {
            "type": "string",
            "nullable": true
          },
          "orderChargeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "revenueScheduleItemId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "invoiceAccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentSettlementId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "externalERPId": {
            "type": "string",
            "nullable": true
          },
          "externalCRMId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Obsolete naming, Same entity as accounting transactions  "
      },
      "WebhookModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "webhookStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookStatus"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "WebhookStatus": {
        "enum": [
          "Enabled",
          "Disabled"
        ],
        "type": "string"
      },
      "WriteOffResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ],
            "nullable": true
          },
          "postingText": {
            "type": "string",
            "nullable": true
          },
          "financialAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "direction": {
        "enum": [
          "desc",
          "asc"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "https://auth.younium.com/connect/token",
            "scopes": {
              "youniumapi": "Access Younium API"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Accounts",
      "description": "Create, read, update and delete accounts"
    },
    {
      "name": "Bookings",
      "description": "Read and update bookings"
    },
    {
      "name": "ChartOfAccounts",
      "description": "Create, read, update and delete financial accounts in the chart of accounts"
    },
    {
      "name": "Subscriptions",
      "description": "All operations for managing subscriptions"
    }
  ]
}